name: PR Checklist Validation

on:
  pull_request:
    types: [opened, edited, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  validate-pr-checklist:
    runs-on: ubuntu-latest
    steps:
      - name: Check Required PR Checklists
        id: validation
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"

          JIRA_REGEX="https:\/\/te-collinsongroup\.atlassian\.net\/browse\/[A-Z0-9-]+"
          MISSING_CHECKS=""

          # Validate "Reason for Changes" field
          REASON_SECTION=$(echo "$PR_BODY" | awk '/Reason for Changes:/,/^$/' | tail -n +2)
          if [[ -z "$REASON_SECTION" || ! "$REASON_SECTION" =~ [a-zA-Z] ]]; then
            MISSING_CHECKS="$MISSING_CHECKS\n❌ **Missing or invalid:** *Reason for Changes*"
          fi

          # Validate "Developer" field
          DEVELOPER_SECTION=$(echo "$PR_BODY" | awk '/Developer:/,/^$/' | tail -n +2)
          if [[ -z "$DEVELOPER_SECTION" || ! "$DEVELOPER_SECTION" =~ [a-zA-Z] ]]; then
            MISSING_CHECKS="$MISSING_CHECKS\n❌ **Missing or invalid:** *Developer*"
          fi

          # Validate JIRA Ticket format
          JIRA_TICKET=$(echo "$PR_BODY" | grep -oE "$JIRA_REGEX")
          if [[ -z "$JIRA_TICKET" ]]; then
            MISSING_CHECKS="$MISSING_CHECKS\n❌ **Invalid or Missing:** *JIRA Ticket*"
          fi

          REQUIRED_CHECKLISTS=(
            'Required databases are available.'
            'Required schemas are created through the data-platform repo.'
            'Required source tables are available/updated.'
            'Final DEV Testing: All tests passed, no unready changes present.'
            'Schema Documentation'
            'This change is ready for further deployment in DEV, UAT & PROD.'
            'Changes have been validated and look good in DEV/UAT.'
          )

          # Define an array to store missing checklists
          MISSING_CHECKLISTS=()
          
          # Check all required checklists
          for CHECK in "${REQUIRED_CHECKLISTS[@]}"; do
            # Extract the checkbox content using regex
            CHECKBOX=$(echo "$PR_BODY" | grep -oP "- \[\s*(.*?)\s*\] $CHECK")
          
            # Trim spaces
            TRIMMED_CHECKBOX=$(echo "$CHECKBOX" | xargs)
          
            # If the checkbox is empty, mark as missing
            if [[ -z "$TRIMMED_CHECKBOX" ]]; then
              MISSING_CHECKLISTS+=("$CHECK")  # Add to the list
            fi
          done
          
          # Check if there are missing checklists
          if [[ ${#MISSING_CHECKLISTS[@]} -ne 0 ]]; then
            echo -e "❌ **PR Validation Failed:** The following required checklists are missing:\n"
            
            for ITEM in "${MISSING_CHECKLISTS[@]}"; do
              echo " - [ ] $ITEM"
            done
          
            # Store in GitHub Actions environment
            echo "missing_checks=${MISSING_CHECKLISTS[*]}" >> $GITHUB_ENV
          
            # Exit with failure
            exit 1
          fi

      - name: Post Comment if Checklists Are Missing
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue_number = context.payload.pull_request.number;
            const pr_author = process.env.PR_AUTHOR;
            const missing_checks = `${{ steps.validation.outputs.missing_checks }}`;

            if (missing_checks.trim()) {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue_number,
                body: `@${pr_author} 🚨 **Your PR is missing required fields or checklist items!**\n${missing_checks}\n\nPlease update the PR description accordingly to meet the required criteria.`
              });
            }
